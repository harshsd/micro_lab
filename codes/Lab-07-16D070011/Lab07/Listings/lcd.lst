C51 COMPILER V9.59.0.0   LCD                                                               09/24/2018 22:16:40 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          /**
   2           LCD HOMEWORK , LABWORK XX
   3           */
   4          
   5          /* @section  I N C L U D E S */
   6          #include "at89c5131.h"
   7          #define LCD_data  P2                // LCD Data port
   8          
   9          //Function Declarations
  10          void LCD_Init();
  11          void LCD_DataWrite(char dat);
  12          void LCD_CmdWrite(char cmd);
  13          void LCD_WriteString(char * str, unsigned char len);
  14          void LCD_Ready();
  15          void sdelay(int delay);
  16          void delay_ms(int delay);
  17          
  18          sbit CS_BAR = P1^4;                 // Chip Select for the ADC
  19          sbit LCD_rs = P0^0;                 // LCD Register Select
  20          sbit LCD_rw = P0^1;                 // LCD Read/Write
  21          sbit LCD_en = P0^2;                 // LCD Enable
  22          sbit LCD_busy = P2^7;               // LCD Busy Flag
  23          
  24          //Global Variables
  25          bit transmit_completed= 0;          // To check if spi data transmit is complete
  26          char serial_data, data_save_high, data_save_low;  
  27          
  28          void main(void)
  29          {
  30   1        P2 = 0x00;                      // Make Port 2 output 
  31   1        LCD_Init();
  32   1        while(1)                      // endless  
  33   1        {
  34   2          /* Code for displaying "Hello World"
  35   2             on the LCD to be written here */
  36   2          char hello[] = "Hello";
  37   2          char world[] = "World";
  38   2          LCD_CmdWrite(0x80);
  39   2          LCD_WriteString(hello , 5);
  40   2          delay_ms(10);
  41   2          LCD_CmdWrite(0xC5);
  42   2          LCD_WriteString(world, 5);
  43   2          sdelay(5);       
  44   2          delay_ms(5000);
  45   2        }
  46   1      }
  47          
  48          /**
  49           * FUNCTION_PURPOSE:LCD Initialization
  50           * FUNCTION_INPUTS: void
  51           * FUNCTION_OUTPUTS: none
  52           */
  53          void LCD_Init()
  54          {
C51 COMPILER V9.59.0.0   LCD                                                               09/24/2018 22:16:40 PAGE 2   

  55   1        sdelay(100);
  56   1        LCD_CmdWrite(0x38);     // LCD 2lines, 5*7 matrix
  57   1        LCD_CmdWrite(0x0C);     // Display ON cursor ON  Blinking off
  58   1        LCD_CmdWrite(0x01);     // Clear the LCD
  59   1        LCD_CmdWrite(0x80);     // Cursor to First line First Position
  60   1      }
  61          
  62          /**
  63           * FUNCTION_PURPOSE: Write Command to LCD
  64           * FUNCTION_INPUTS: cmd- command to be written
  65           * FUNCTION_OUTPUTS: none
  66           */
  67          void LCD_CmdWrite(char cmd)
  68          {
  69   1        LCD_Ready();
  70   1        LCD_data=cmd;           // Send the command to LCD
  71   1        LCD_rs=0;               // Select the Command Register by pulling LCD_rs LOW
  72   1        LCD_rw=0;               // Select the Write Operation  by pulling RW LOW
  73   1        LCD_en=1;               // Send a High-to-Low Pusle at Enable Pin
  74   1        sdelay(5);
  75   1        LCD_en=0;
  76   1        sdelay(5);
  77   1      }
  78          
  79          /**
  80           * FUNCTION_PURPOSE: Write Command to LCD
  81           * FUNCTION_INPUTS: dat- data to be written
  82           * FUNCTION_OUTPUTS: none
  83           */
  84          void LCD_DataWrite( char dat)
  85          {
  86   1        LCD_Ready();
  87   1        LCD_data=dat;           // Send the data to LCD
  88   1        LCD_rs=1;               // Select the Data Register by pulling LCD_rs HIGH
  89   1        LCD_rw=0;               // Select the Write Operation by pulling RW LOW
  90   1        LCD_en=1;               // Send a High-to-Low Pusle at Enable Pin
  91   1        sdelay(5);
  92   1        LCD_en=0;
  93   1        sdelay(5);
  94   1      }
  95          /**
  96           * FUNCTION_PURPOSE: Write a string on the LCD Screen
  97           * FUNCTION_INPUTS: 1. str - pointer to the string to be written, 
  98                              2. length - length of the array
  99           * FUNCTION_OUTPUTS: none
 100           */
 101          void LCD_WriteString( char * str, unsigned char length)
 102          {
 103   1          while(length>0)
 104   1          {
 105   2              LCD_DataWrite(*str);
 106   2              str++;
 107   2              length--;
 108   2          }
 109   1      }
 110          
 111          /**
 112           * FUNCTION_PURPOSE: To check if the LCD is ready to communicate
 113           * FUNCTION_INPUTS: void
 114           * FUNCTION_OUTPUTS: none
 115           */
 116          void LCD_Ready()
C51 COMPILER V9.59.0.0   LCD                                                               09/24/2018 22:16:40 PAGE 3   

 117          {
 118   1        LCD_data = 0xFF;
 119   1        LCD_rs = 0;
 120   1        LCD_rw = 1;
 121   1        LCD_en = 0;
 122   1        sdelay(5);
 123   1        LCD_en = 1;
 124   1        while(LCD_busy == 1)
 125   1        {
 126   2          LCD_en = 0;
 127   2          LCD_en = 1;
 128   2        }
 129   1        LCD_en = 0;
 130   1      }
 131          
 132          /**
 133           * FUNCTION_PURPOSE: A delay of 15us for a 24 MHz crystal
 134           * FUNCTION_INPUTS: void
 135           * FUNCTION_OUTPUTS: none
 136           */
 137          void sdelay(int delay)
 138          {
 139   1        char d=0;
 140   1        while(delay>0)
 141   1        {
 142   2          for(d=0;d<5;d++);
 143   2          delay--;
 144   2        }
 145   1      }
 146          
 147          /**
 148           * FUNCTION_PURPOSE: A delay of around 1000us for a 24MHz crystel
 149           * FUNCTION_INPUTS: void
 150           * FUNCTION_OUTPUTS: none
 151           */
 152          void delay_ms(int delay)
 153          {
 154   1        int d=0;
 155   1        while(delay>0)
 156   1        {
 157   2          for(d=0;d<382;d++);
 158   2          delay--;
 159   2        }
 160   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    322    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
